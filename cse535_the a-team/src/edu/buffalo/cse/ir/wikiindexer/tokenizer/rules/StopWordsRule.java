package edu.buffalo.cse.ir.wikiindexer.tokenizer.rules;

import java.util.HashSet;
import java.util.Set;

import edu.buffalo.cse.ir.wikiindexer.tokenizer.TokenStream;
import edu.buffalo.cse.ir.wikiindexer.tokenizer.TokenizerException;
import edu.buffalo.cse.ir.wikiindexer.tokenizer.rules.TokenizerRule.RULENAMES;

@RuleClass(className = RULENAMES.STOPWORDS)
public class StopWordsRule implements TokenizerRule{


	public void apply(TokenStream stream) {
		if(stream!=null)
		{
			String token;
			while(stream.hasNext())
			{
				token=stream.next();
				if(token!=null&&isStopWord(token))
				{
					stream.previous();
					stream.remove();
				}
			}
			stream.reset();
		}
	
	}
	
	public static boolean isStopWord(String token)
	{
		Set<String> sw = new HashSet<String>();
		sw.add("a");
		sw.add("the");
		sw.add("s");
		sw.add("from");
		sw.add("two");
		sw.add("seven");
		sw.add("a");
		sw.add("u");
		sw.add("ir");
		sw.add("iv");
		sw.add("able");
		sw.add("about");
		sw.add("above");
		sw.add("according");
		sw.add("across");
		sw.add("actually");
		sw.add("after");
		sw.add("afterwards");
		sw.add("again");
		sw.add("all");
		sw.add("also");
		sw.add("although");
		sw.add("always");
		sw.add("am");
		sw.add(".");
		sw.add("s");
		sw.add("known");
		sw.add("many");
		sw.add("made");
		sw.add("most");
		sw.add("named");
		sw.add("than");
		sw.add("well");
		sw.add("between");
		sw.add("based");
		sw.add("called");
		sw.add("t");
		sw.add("out");
		sw.add("b");
		sw.add("among");
		sw.add("amongst");
		sw.add("an");
		sw.add("h");
		sw.add("i");
		sw.add("k");
		sw.add("I");
		sw.add("and");
		sw.add("another");
		sw.add("any");
		sw.add("anyway");
		sw.add("are");
		sw.add("around");
		sw.add("as");
		sw.add("ask");
		sw.add("at");
		sw.add("other");
		sw.add("used");
		sw.add("more");
		sw.add("into");
		sw.add("being");
		sw.add("new");
		sw.add("both");
		sw.add("part");
		sw.add("found");
		sw.add("created");
		sw.add("because");
		sw.add("became");
		sw.add("be");
		sw.add("several");
		sw.add("been");
		sw.add("but");
		sw.add("by");
		sw.add("can");
		sw.add("cannot");
		sw.add("-");
		sw.add("cant");
		sw.add("could");
		sw.add("did");
		sw.add("do");
		sw.add("does");
		sw.add("doing");
		sw.add("done");
		sw.add("down");
		sw.add("downwards");
		sw.add("during");
		sw.add("each");
		sw.add("etc");
		sw.add("even");
		sw.add("ever");
		sw.add("every");
		sw.add("everybody");
		sw.add("far");
		sw.add("few");
		sw.add("first");
		sw.add("followed");
		sw.add("following");
		sw.add("follows");
		sw.add("for");
		sw.add("formerly");
		sw.add("forth");
		sw.add("further");
		sw.add("furthermore");
		sw.add("get");
		sw.add("gets");
		sw.add("getting");
		sw.add("gives");
		sw.add("go");
		sw.add("goes");
		sw.add("had");
		sw.add("hardly");
		sw.add("has");
		sw.add("have");
		sw.add("having");
		sw.add("he");
		sw.add("hello");
		sw.add("hence");
		sw.add("her");
		sw.add("hers");
		sw.add("herself");
		sw.add("hi");
		sw.add("him");
		sw.add("himself");
		sw.add("his");
		sw.add("how");
		sw.add("ie");
		sw.add("if");
		sw.add("in");
		sw.add("is");
		sw.add("it");
		sw.add("its");
		sw.add("itself");
		sw.add("just");
		sw.add("later");
		sw.add("latter");
		sw.add("let");
		sw.add("like");
		sw.add("liked");
		sw.add("likely");
		sw.add("may");
		sw.add("maybe");
		sw.add("me");
		sw.add("mean");
		sw.add("my");
		sw.add("myself");
		sw.add("namely");
		sw.add("nd");
		sw.add("near");
		sw.add("nearly");
		sw.add("necessary");
		sw.add("need");
		sw.add("needs");
		sw.add("neither");
		sw.add("never");
		sw.add("nevertheless");
		sw.add("no");
		sw.add("nobody");
		sw.add("non");
		sw.add("nor");
		sw.add("normally");
		sw.add("not");
		sw.add("nothing");
		sw.add("novel");
		sw.add("now");
		sw.add("of");
		sw.add("off");
		sw.add("often");
		sw.add("oh");
		sw.add("on");
		sw.add("one");
		sw.add("ones");
		sw.add("only");
		sw.add("or");
		sw.add("our");
		sw.add("ours");
		sw.add("ourselves");
		sw.add("over");
		sw.add("own");
		sw.add("per");
		sw.add("perhaps");
		sw.add("provides");
		sw.add("que");
		sw.add("quite");
		sw.add("rather");
		sw.add("really");
		sw.add("reasonably");
		sw.add("right");
		sw.add("said");
		sw.add("same");
		sw.add("saw");
		sw.add("say");
		sw.add("says");
		sw.add("see");
		sw.add("seeing");
		sw.add("seems");
		sw.add("seen");
		sw.add("self");
		sw.add("selves");
		sw.add("sent");
		sw.add("seriously");
		sw.add("she");
		sw.add("should");
		sw.add("since");
		sw.add("so");
		sw.add("some");
		sw.add("soon");
		sw.add("still");
		sw.add("sub");
		sw.add("such");
		sw.add("sure");
		sw.add("take");
		sw.add("taken");
		sw.add("tell");
		sw.add("tends");
		sw.add("that");
		sw.add("thats");
		sw.add("the");
		sw.add("their");
		sw.add("theirs");
		sw.add("them");
		sw.add("themselves");
		sw.add("then");
		sw.add("thence");
		sw.add("there");
		sw.add("thereafter");
		sw.add("these");
		sw.add("they");
		sw.add("think");
		sw.add("third");
		sw.add("this");
		sw.add("those");
		sw.add("though");
		sw.add("three");
		sw.add("through");
		sw.add("throughout");
		sw.add("thru");
		sw.add("thus");
		sw.add("to");
		sw.add("too");
		sw.add("took");
		sw.add("toward");
		sw.add("towards");
		sw.add("tried");
		sw.add("tries");
		sw.add("truly");
		sw.add("try");
		sw.add("trying");
		sw.add("twice");
		sw.add("un");
		sw.add("under");
		sw.add("unto");
		sw.add("up");
		sw.add("upon");
		sw.add("us");
		sw.add("use");
		sw.add("very");
		sw.add("via");
		sw.add("viz");
		sw.add("wants");
		sw.add("was");
		sw.add("we");
		sw.add("went");
		sw.add("were");
		sw.add("what");
		sw.add("whatever");
		sw.add("when");
		sw.add("whence");
		sw.add("whenever");
		sw.add("where");
		sw.add("whereafter");
		sw.add("whereas");
		sw.add("whereby");
		sw.add("wherein");
		sw.add("whereupon");
		sw.add("wherever");
		sw.add("whether");
		sw.add("which");
		sw.add("while");
		sw.add("who");
		sw.add("whom");
		sw.add("whose");
		sw.add("why");
		sw.add("will");
		sw.add("with");
		sw.add("would");
		sw.add("yet");
		sw.add("you");
		sw.add("your");
		sw.add("yours");
		sw.add("yourself");
		sw.add("yourselves");
		
		if(sw.contains(token.toLowerCase()))
		return true;
		else return false;
		
	}}
